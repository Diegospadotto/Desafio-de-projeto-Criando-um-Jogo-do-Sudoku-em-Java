public class SudokuSolver {
    public static boolean solve(SudokuBoard board) {
        Cell[][] grid = board.getBoard();
        return solveSudoku(grid, 0, 0);
    }

    private static boolean solveSudoku(Cell[][] grid, int row, int col) {
        if (row == 9) return true;
        if (col == 9) return solveSudoku(grid, row + 1, 0);
        if (grid[row][col].getValue() != 0) return solveSudoku(grid, row, col + 1);

        for (int num = 1; num <= 9; num++) {
            if (isValid(grid, row, col, num)) {
                grid[row][col].setValue(num);
                if (solveSudoku(grid, row, col + 1)) return true;
                grid[row][col].setValue(0);
            }
        }
        return false;
    }

    private static boolean isValid(Cell[][] grid, int row, int col, int num) {
        for (int i = 0; i < 9; i++) {
            if (grid[row][i].getValue() == num || grid[i][col].getValue() == num)
                return false;
        }
        return true;
    }
}